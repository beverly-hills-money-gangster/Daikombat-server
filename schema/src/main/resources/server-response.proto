syntax = "proto3";

package daikombat.dto;

option java_multiple_files = true;
option java_package = "com.beverly.hills.money.gang.proto";

message ServerResponse {

  oneof response {
    ErrorEvent errorEvent = 1;
    ChatEvent chatEvents = 2;
    GameEvents gameEvents = 3;
    ServerInfo serverInfo = 4;
    Ping ping = 5;
    GameOver gameOver = 6;
    PowerUpSpawnEvent powerUpSpawn = 7;
  }

  message PowerUpSpawnEvent {
    optional GamePowerUpType type = 1;
    optional Vector position = 2;
  }

  message GameOver {
    optional LeaderBoard leaderBoard = 1;
  }

  message ServerInfo {
    repeated GameInfo games = 1;
    optional string version = 2;
    optional int32 fragsToWin = 3;
    optional int32 movesUpdateFreqMls = 4;
  }

  message Ping {}

  message GameInfo {
    optional int32 gameId = 1;
    optional int32 playersOnline = 2;
    optional int32 maxGamePlayers = 3;
  }

  message ErrorEvent {
    optional int32 errorCode = 1;
    optional string message = 2;
  }

  message ChatEvents {
    repeated ChatEvent events = 1;
  }

  message GameEvents {
    optional int32 playersOnline = 1;
    repeated GameEvent events = 2;
  }

  message ChatEvent {
    optional int32 playerId = 1;
    optional string message = 2;
    optional string name = 3;
  }

  message GameEvent {
    optional GameEventPlayerStats player = 1;
    optional GameEventPlayerStats affectedPlayer = 2;
    GameEventType eventType = 3;
    optional LeaderBoard leaderBoard = 4;

    enum GameEventType {
      MOVE = 0;
      SHOOT = 1;
      GET_SHOT = 2;
      KILL_SHOOTING = 3;
      SPAWN = 4;
      EXIT = 5;
      GET_PUNCHED = 6;
      KILL_PUNCHING = 7;
      PUNCH = 8;
    }
  }

  message LeaderBoard {
    repeated LeaderBoardItem items = 1;
  }

  message LeaderBoardItem {
    optional int32 playerId = 1;
    optional int32 kills = 2;
    optional string playerName = 3;
    optional int32 deaths = 4;
  }

  message GameEventPlayerStats {
    optional int32 playerId = 1;
    optional string playerName = 2;
    Vector position = 3;
    Vector direction = 4;
    optional int32 health = 5;
    repeated GamePowerUp activePowerUps = 6;
    optional PlayerSkinColor skinColor = 7;
  }

  enum PlayerSkinColor {
    GREEN = 0;
    PINK = 1;
    PURPLE = 2;
    BLUE = 3;
    YELLOW = 4;
    ORANGE = 5;
  }

  message GamePowerUp {
    optional GamePowerUpType type = 1;
    optional int32 lastsForMls = 2;
  }

  enum GamePowerUpType {
    QUAD_DAMAGE = 0;
    SPEED = 1;
    INVISIBILITY = 2;
    HEALTH = 3;
  }

  message Vector {
    optional float x = 1;
    optional float y = 2;
  }
}