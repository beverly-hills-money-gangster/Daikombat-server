// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: schema/src/main/resources/server-response.proto

// Protobuf Java Version: 3.25.0
package com.beverly.hills.money.gang.proto;

public final class ServerResponseOuterClass {
  private ServerResponseOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_daikombat_dto_ServerResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_daikombat_dto_ServerResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_daikombat_dto_ServerResponse_TeleportSpawnEvent_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_daikombat_dto_ServerResponse_TeleportSpawnEvent_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_daikombat_dto_ServerResponse_TeleportSpawnEventItem_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_daikombat_dto_ServerResponse_TeleportSpawnEventItem_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_daikombat_dto_ServerResponse_PowerUpSpawnEvent_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_daikombat_dto_ServerResponse_PowerUpSpawnEvent_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_daikombat_dto_ServerResponse_PowerUpSpawnEventItem_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_daikombat_dto_ServerResponse_PowerUpSpawnEventItem_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_daikombat_dto_ServerResponse_GameOver_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_daikombat_dto_ServerResponse_GameOver_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_daikombat_dto_ServerResponse_ServerInfo_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_daikombat_dto_ServerResponse_ServerInfo_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_daikombat_dto_ServerResponse_WeaponInfo_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_daikombat_dto_ServerResponse_WeaponInfo_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_daikombat_dto_ServerResponse_Ping_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_daikombat_dto_ServerResponse_Ping_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_daikombat_dto_ServerResponse_GameInfo_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_daikombat_dto_ServerResponse_GameInfo_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_daikombat_dto_ServerResponse_ErrorEvent_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_daikombat_dto_ServerResponse_ErrorEvent_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_daikombat_dto_ServerResponse_ChatEvents_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_daikombat_dto_ServerResponse_ChatEvents_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_daikombat_dto_ServerResponse_GameEvents_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_daikombat_dto_ServerResponse_GameEvents_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_daikombat_dto_ServerResponse_ChatEvent_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_daikombat_dto_ServerResponse_ChatEvent_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_daikombat_dto_ServerResponse_GameEvent_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_daikombat_dto_ServerResponse_GameEvent_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_daikombat_dto_ServerResponse_LeaderBoard_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_daikombat_dto_ServerResponse_LeaderBoard_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_daikombat_dto_ServerResponse_LeaderBoardItem_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_daikombat_dto_ServerResponse_LeaderBoardItem_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_daikombat_dto_ServerResponse_GameEventPlayerStats_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_daikombat_dto_ServerResponse_GameEventPlayerStats_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_daikombat_dto_ServerResponse_PlayerGameMatchStats_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_daikombat_dto_ServerResponse_PlayerGameMatchStats_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_daikombat_dto_ServerResponse_GamePowerUp_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_daikombat_dto_ServerResponse_GamePowerUp_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_daikombat_dto_ServerResponse_Vector_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_daikombat_dto_ServerResponse_Vector_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n/schema/src/main/resources/server-respo" +
      "nse.proto\022\rdaikombat.dto\"\342\036\n\016ServerRespo" +
      "nse\022>\n\nerrorEvent\030\001 \001(\0132(.daikombat.dto." +
      "ServerResponse.ErrorEventH\000\022=\n\nchatEvent" +
      "s\030\002 \001(\0132\'.daikombat.dto.ServerResponse.C" +
      "hatEventH\000\022>\n\ngameEvents\030\003 \001(\0132(.daikomb" +
      "at.dto.ServerResponse.GameEventsH\000\022>\n\nse" +
      "rverInfo\030\004 \001(\0132(.daikombat.dto.ServerRes" +
      "ponse.ServerInfoH\000\0222\n\004ping\030\005 \001(\0132\".daiko" +
      "mbat.dto.ServerResponse.PingH\000\022:\n\010gameOv" +
      "er\030\006 \001(\0132&.daikombat.dto.ServerResponse." +
      "GameOverH\000\022G\n\014powerUpSpawn\030\007 \001(\0132/.daiko" +
      "mbat.dto.ServerResponse.PowerUpSpawnEven" +
      "tH\000\022I\n\rteleportSpawn\030\010 \001(\01320.daikombat.d" +
      "to.ServerResponse.TeleportSpawnEventH\000\032Y" +
      "\n\022TeleportSpawnEvent\022C\n\005items\030\001 \003(\01324.da" +
      "ikombat.dto.ServerResponse.TeleportSpawn" +
      "EventItem\032z\n\026TeleportSpawnEventItem\022;\n\010p" +
      "osition\030\001 \001(\0132$.daikombat.dto.ServerResp" +
      "onse.VectorH\000\210\001\001\022\017\n\002id\030\002 \001(\005H\001\210\001\001B\013\n\t_po" +
      "sitionB\005\n\003_id\032W\n\021PowerUpSpawnEvent\022B\n\005it" +
      "ems\030\001 \003(\01323.daikombat.dto.ServerResponse" +
      ".PowerUpSpawnEventItem\032\254\001\n\025PowerUpSpawnE" +
      "ventItem\022@\n\004type\030\001 \001(\0162-.daikombat.dto.S" +
      "erverResponse.GamePowerUpTypeH\000\210\001\001\022;\n\010po" +
      "sition\030\002 \001(\0132$.daikombat.dto.ServerRespo" +
      "nse.VectorH\001\210\001\001B\007\n\005_typeB\013\n\t_position\032_\n" +
      "\010GameOver\022C\n\013leaderBoard\030\001 \001(\0132).daikomb" +
      "at.dto.ServerResponse.LeaderBoardH\000\210\001\001B\016" +
      "\n\014_leaderBoard\032\256\002\n\nServerInfo\0225\n\005games\030\001" +
      " \003(\0132&.daikombat.dto.ServerResponse.Game" +
      "Info\022\024\n\007version\030\002 \001(\tH\000\210\001\001\022\027\n\nfragsToWin" +
      "\030\003 \001(\005H\001\210\001\001\022\037\n\022movesUpdateFreqMls\030\004 \001(\005H" +
      "\002\210\001\001\022\030\n\013playerSpeed\030\005 \001(\005H\003\210\001\001\022=\n\013weapon" +
      "sInfo\030\006 \003(\0132(.daikombat.dto.ServerRespon" +
      "se.WeaponInfoB\n\n\010_versionB\r\n\013_fragsToWin" +
      "B\025\n\023_movesUpdateFreqMlsB\016\n\014_playerSpeed\032" +
      "\266\001\n\nWeaponInfo\022K\n\nweaponType\030\001 \001(\01622.dai" +
      "kombat.dto.ServerResponse.GameEvent.Weap" +
      "onTypeH\000\210\001\001\022\030\n\013maxDistance\030\002 \001(\001H\001\210\001\001\022\025\n" +
      "\010delayMls\030\003 \001(\005H\002\210\001\001B\r\n\013_weaponTypeB\016\n\014_" +
      "maxDistanceB\013\n\t_delayMls\032\006\n\004Ping\032\210\001\n\010Gam" +
      "eInfo\022\023\n\006gameId\030\001 \001(\005H\000\210\001\001\022\032\n\rplayersOnl" +
      "ine\030\002 \001(\005H\001\210\001\001\022\033\n\016maxGamePlayers\030\003 \001(\005H\002" +
      "\210\001\001B\t\n\007_gameIdB\020\n\016_playersOnlineB\021\n\017_max" +
      "GamePlayers\032T\n\nErrorEvent\022\026\n\terrorCode\030\001" +
      " \001(\005H\000\210\001\001\022\024\n\007message\030\002 \001(\tH\001\210\001\001B\014\n\n_erro" +
      "rCodeB\n\n\010_message\032E\n\nChatEvents\0227\n\006event" +
      "s\030\001 \003(\0132\'.daikombat.dto.ServerResponse.C" +
      "hatEvent\032s\n\nGameEvents\022\032\n\rplayersOnline\030" +
      "\001 \001(\005H\000\210\001\001\0227\n\006events\030\002 \003(\0132\'.daikombat.d" +
      "to.ServerResponse.GameEventB\020\n\016_playersO" +
      "nline\032m\n\tChatEvent\022\025\n\010playerId\030\001 \001(\005H\000\210\001" +
      "\001\022\024\n\007message\030\002 \001(\tH\001\210\001\001\022\021\n\004name\030\003 \001(\tH\002\210" +
      "\001\001B\013\n\t_playerIdB\n\n\010_messageB\007\n\005_name\032\373\004\n" +
      "\tGameEvent\022G\n\006player\030\001 \001(\01322.daikombat.d" +
      "to.ServerResponse.GameEventPlayerStatsH\000" +
      "\210\001\001\022O\n\016affectedPlayer\030\002 \001(\01322.daikombat." +
      "dto.ServerResponse.GameEventPlayerStatsH" +
      "\001\210\001\001\022H\n\teventType\030\003 \001(\01625.daikombat.dto." +
      "ServerResponse.GameEvent.GameEventType\022C" +
      "\n\013leaderBoard\030\004 \001(\0132).daikombat.dto.Serv" +
      "erResponse.LeaderBoardH\002\210\001\001\022\025\n\010sequence\030" +
      "\005 \001(\005H\003\210\001\001\022K\n\nweaponType\030\006 \001(\01622.daikomb" +
      "at.dto.ServerResponse.GameEvent.WeaponTy" +
      "peH\004\210\001\001\"d\n\rGameEventType\022\010\n\004MOVE\020\000\022\n\n\006AT" +
      "TACK\020\001\022\020\n\014GET_ATTACKED\020\002\022\010\n\004KILL\020\003\022\t\n\005SP" +
      "AWN\020\004\022\010\n\004EXIT\020\005\022\014\n\010TELEPORT\020\006\"1\n\nWeaponT" +
      "ype\022\t\n\005PUNCH\020\000\022\013\n\007SHOTGUN\020\001\022\013\n\007RAILGUN\020\002" +
      "B\t\n\007_playerB\021\n\017_affectedPlayerB\016\n\014_leade" +
      "rBoardB\013\n\t_sequenceB\r\n\013_weaponType\032K\n\013Le" +
      "aderBoard\022<\n\005items\030\001 \003(\0132-.daikombat.dto" +
      ".ServerResponse.LeaderBoardItem\032\233\001\n\017Lead" +
      "erBoardItem\022\025\n\010playerId\030\001 \001(\005H\000\210\001\001\022\022\n\005ki" +
      "lls\030\002 \001(\005H\001\210\001\001\022\027\n\nplayerName\030\003 \001(\tH\002\210\001\001\022" +
      "\023\n\006deaths\030\004 \001(\005H\003\210\001\001B\013\n\t_playerIdB\010\n\006_ki" +
      "llsB\r\n\013_playerNameB\t\n\007_deaths\032\357\003\n\024GameEv" +
      "entPlayerStats\022\025\n\010playerId\030\001 \001(\005H\000\210\001\001\022\027\n" +
      "\nplayerName\030\002 \001(\tH\001\210\001\001\0226\n\010position\030\003 \001(\013" +
      "2$.daikombat.dto.ServerResponse.Vector\0227" +
      "\n\tdirection\030\004 \001(\0132$.daikombat.dto.Server" +
      "Response.Vector\022\023\n\006health\030\005 \001(\005H\002\210\001\001\022A\n\016" +
      "activePowerUps\030\006 \003(\0132).daikombat.dto.Ser" +
      "verResponse.GamePowerUp\022E\n\tskinColor\030\007 \001" +
      "(\0162-.daikombat.dto.ServerResponse.Player" +
      "SkinColorH\003\210\001\001\022O\n\016gameMatchStats\030\010 \001(\01322" +
      ".daikombat.dto.ServerResponse.PlayerGame" +
      "MatchStatsH\004\210\001\001B\013\n\t_playerIdB\r\n\013_playerN" +
      "ameB\t\n\007_healthB\014\n\n_skinColorB\021\n\017_gameMat" +
      "chStats\032T\n\024PlayerGameMatchStats\022\022\n\005kills" +
      "\030\001 \001(\005H\000\210\001\001\022\023\n\006deaths\030\002 \001(\005H\001\210\001\001B\010\n\006_kil" +
      "lsB\t\n\007_deaths\032\202\001\n\013GamePowerUp\022@\n\004type\030\001 " +
      "\001(\0162-.daikombat.dto.ServerResponse.GameP" +
      "owerUpTypeH\000\210\001\001\022\030\n\013lastsForMls\030\002 \001(\005H\001\210\001" +
      "\001B\007\n\005_typeB\016\n\014_lastsForMls\0324\n\006Vector\022\016\n\001" +
      "x\030\001 \001(\002H\000\210\001\001\022\016\n\001y\030\002 \001(\002H\001\210\001\001B\004\n\002_xB\004\n\002_y" +
      "\"T\n\017PlayerSkinColor\022\t\n\005GREEN\020\000\022\010\n\004PINK\020\001" +
      "\022\n\n\006PURPLE\020\002\022\010\n\004BLUE\020\003\022\n\n\006YELLOW\020\004\022\n\n\006OR" +
      "ANGE\020\005\"A\n\017GamePowerUpType\022\017\n\013QUAD_DAMAGE" +
      "\020\000\022\020\n\014INVISIBILITY\020\001\022\013\n\007DEFENCE\020\002B\n\n\010res" +
      "ponseB&\n\"com.beverly.hills.money.gang.pr" +
      "otoP\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_daikombat_dto_ServerResponse_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_daikombat_dto_ServerResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_daikombat_dto_ServerResponse_descriptor,
        new java.lang.String[] { "ErrorEvent", "ChatEvents", "GameEvents", "ServerInfo", "Ping", "GameOver", "PowerUpSpawn", "TeleportSpawn", "Response", });
    internal_static_daikombat_dto_ServerResponse_TeleportSpawnEvent_descriptor =
      internal_static_daikombat_dto_ServerResponse_descriptor.getNestedTypes().get(0);
    internal_static_daikombat_dto_ServerResponse_TeleportSpawnEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_daikombat_dto_ServerResponse_TeleportSpawnEvent_descriptor,
        new java.lang.String[] { "Items", });
    internal_static_daikombat_dto_ServerResponse_TeleportSpawnEventItem_descriptor =
      internal_static_daikombat_dto_ServerResponse_descriptor.getNestedTypes().get(1);
    internal_static_daikombat_dto_ServerResponse_TeleportSpawnEventItem_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_daikombat_dto_ServerResponse_TeleportSpawnEventItem_descriptor,
        new java.lang.String[] { "Position", "Id", });
    internal_static_daikombat_dto_ServerResponse_PowerUpSpawnEvent_descriptor =
      internal_static_daikombat_dto_ServerResponse_descriptor.getNestedTypes().get(2);
    internal_static_daikombat_dto_ServerResponse_PowerUpSpawnEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_daikombat_dto_ServerResponse_PowerUpSpawnEvent_descriptor,
        new java.lang.String[] { "Items", });
    internal_static_daikombat_dto_ServerResponse_PowerUpSpawnEventItem_descriptor =
      internal_static_daikombat_dto_ServerResponse_descriptor.getNestedTypes().get(3);
    internal_static_daikombat_dto_ServerResponse_PowerUpSpawnEventItem_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_daikombat_dto_ServerResponse_PowerUpSpawnEventItem_descriptor,
        new java.lang.String[] { "Type", "Position", });
    internal_static_daikombat_dto_ServerResponse_GameOver_descriptor =
      internal_static_daikombat_dto_ServerResponse_descriptor.getNestedTypes().get(4);
    internal_static_daikombat_dto_ServerResponse_GameOver_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_daikombat_dto_ServerResponse_GameOver_descriptor,
        new java.lang.String[] { "LeaderBoard", });
    internal_static_daikombat_dto_ServerResponse_ServerInfo_descriptor =
      internal_static_daikombat_dto_ServerResponse_descriptor.getNestedTypes().get(5);
    internal_static_daikombat_dto_ServerResponse_ServerInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_daikombat_dto_ServerResponse_ServerInfo_descriptor,
        new java.lang.String[] { "Games", "Version", "FragsToWin", "MovesUpdateFreqMls", "PlayerSpeed", "WeaponsInfo", });
    internal_static_daikombat_dto_ServerResponse_WeaponInfo_descriptor =
      internal_static_daikombat_dto_ServerResponse_descriptor.getNestedTypes().get(6);
    internal_static_daikombat_dto_ServerResponse_WeaponInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_daikombat_dto_ServerResponse_WeaponInfo_descriptor,
        new java.lang.String[] { "WeaponType", "MaxDistance", "DelayMls", });
    internal_static_daikombat_dto_ServerResponse_Ping_descriptor =
      internal_static_daikombat_dto_ServerResponse_descriptor.getNestedTypes().get(7);
    internal_static_daikombat_dto_ServerResponse_Ping_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_daikombat_dto_ServerResponse_Ping_descriptor,
        new java.lang.String[] { });
    internal_static_daikombat_dto_ServerResponse_GameInfo_descriptor =
      internal_static_daikombat_dto_ServerResponse_descriptor.getNestedTypes().get(8);
    internal_static_daikombat_dto_ServerResponse_GameInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_daikombat_dto_ServerResponse_GameInfo_descriptor,
        new java.lang.String[] { "GameId", "PlayersOnline", "MaxGamePlayers", });
    internal_static_daikombat_dto_ServerResponse_ErrorEvent_descriptor =
      internal_static_daikombat_dto_ServerResponse_descriptor.getNestedTypes().get(9);
    internal_static_daikombat_dto_ServerResponse_ErrorEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_daikombat_dto_ServerResponse_ErrorEvent_descriptor,
        new java.lang.String[] { "ErrorCode", "Message", });
    internal_static_daikombat_dto_ServerResponse_ChatEvents_descriptor =
      internal_static_daikombat_dto_ServerResponse_descriptor.getNestedTypes().get(10);
    internal_static_daikombat_dto_ServerResponse_ChatEvents_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_daikombat_dto_ServerResponse_ChatEvents_descriptor,
        new java.lang.String[] { "Events", });
    internal_static_daikombat_dto_ServerResponse_GameEvents_descriptor =
      internal_static_daikombat_dto_ServerResponse_descriptor.getNestedTypes().get(11);
    internal_static_daikombat_dto_ServerResponse_GameEvents_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_daikombat_dto_ServerResponse_GameEvents_descriptor,
        new java.lang.String[] { "PlayersOnline", "Events", });
    internal_static_daikombat_dto_ServerResponse_ChatEvent_descriptor =
      internal_static_daikombat_dto_ServerResponse_descriptor.getNestedTypes().get(12);
    internal_static_daikombat_dto_ServerResponse_ChatEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_daikombat_dto_ServerResponse_ChatEvent_descriptor,
        new java.lang.String[] { "PlayerId", "Message", "Name", });
    internal_static_daikombat_dto_ServerResponse_GameEvent_descriptor =
      internal_static_daikombat_dto_ServerResponse_descriptor.getNestedTypes().get(13);
    internal_static_daikombat_dto_ServerResponse_GameEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_daikombat_dto_ServerResponse_GameEvent_descriptor,
        new java.lang.String[] { "Player", "AffectedPlayer", "EventType", "LeaderBoard", "Sequence", "WeaponType", });
    internal_static_daikombat_dto_ServerResponse_LeaderBoard_descriptor =
      internal_static_daikombat_dto_ServerResponse_descriptor.getNestedTypes().get(14);
    internal_static_daikombat_dto_ServerResponse_LeaderBoard_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_daikombat_dto_ServerResponse_LeaderBoard_descriptor,
        new java.lang.String[] { "Items", });
    internal_static_daikombat_dto_ServerResponse_LeaderBoardItem_descriptor =
      internal_static_daikombat_dto_ServerResponse_descriptor.getNestedTypes().get(15);
    internal_static_daikombat_dto_ServerResponse_LeaderBoardItem_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_daikombat_dto_ServerResponse_LeaderBoardItem_descriptor,
        new java.lang.String[] { "PlayerId", "Kills", "PlayerName", "Deaths", });
    internal_static_daikombat_dto_ServerResponse_GameEventPlayerStats_descriptor =
      internal_static_daikombat_dto_ServerResponse_descriptor.getNestedTypes().get(16);
    internal_static_daikombat_dto_ServerResponse_GameEventPlayerStats_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_daikombat_dto_ServerResponse_GameEventPlayerStats_descriptor,
        new java.lang.String[] { "PlayerId", "PlayerName", "Position", "Direction", "Health", "ActivePowerUps", "SkinColor", "GameMatchStats", });
    internal_static_daikombat_dto_ServerResponse_PlayerGameMatchStats_descriptor =
      internal_static_daikombat_dto_ServerResponse_descriptor.getNestedTypes().get(17);
    internal_static_daikombat_dto_ServerResponse_PlayerGameMatchStats_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_daikombat_dto_ServerResponse_PlayerGameMatchStats_descriptor,
        new java.lang.String[] { "Kills", "Deaths", });
    internal_static_daikombat_dto_ServerResponse_GamePowerUp_descriptor =
      internal_static_daikombat_dto_ServerResponse_descriptor.getNestedTypes().get(18);
    internal_static_daikombat_dto_ServerResponse_GamePowerUp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_daikombat_dto_ServerResponse_GamePowerUp_descriptor,
        new java.lang.String[] { "Type", "LastsForMls", });
    internal_static_daikombat_dto_ServerResponse_Vector_descriptor =
      internal_static_daikombat_dto_ServerResponse_descriptor.getNestedTypes().get(19);
    internal_static_daikombat_dto_ServerResponse_Vector_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_daikombat_dto_ServerResponse_Vector_descriptor,
        new java.lang.String[] { "X", "Y", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
