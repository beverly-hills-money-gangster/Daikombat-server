// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: schema/src/main/resources/server-command.proto

// Protobuf Java Version: 3.25.0
package com.beverly.hills.money.gang.proto;

/**
 * Protobuf type {@code daikombat.dto.ServerCommand}
 */
public final class ServerCommand extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:daikombat.dto.ServerCommand)
    ServerCommandOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ServerCommand.newBuilder() to construct.
  private ServerCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ServerCommand() {
    hmac_ = com.google.protobuf.ByteString.EMPTY;
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new ServerCommand();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return ServerCommandOuterClass.internal_static_daikombat_dto_ServerCommand_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return ServerCommandOuterClass.internal_static_daikombat_dto_ServerCommand_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            ServerCommand.class, Builder.class);
  }

  private int bitField0_;
  private int commandCase_ = 0;
  @SuppressWarnings("serial")
  private Object command_;
  public enum CommandCase
      implements com.google.protobuf.Internal.EnumLite,
          InternalOneOfEnum {
    CHATCOMMAND(3),
    GAMECOMMAND(4),
    JOINGAMECOMMAND(5),
    GETSERVERINFOCOMMAND(6),
    COMMAND_NOT_SET(0);
    private final int value;
    private CommandCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static CommandCase valueOf(int value) {
      return forNumber(value);
    }

    public static CommandCase forNumber(int value) {
      switch (value) {
        case 3: return CHATCOMMAND;
        case 4: return GAMECOMMAND;
        case 5: return JOINGAMECOMMAND;
        case 6: return GETSERVERINFOCOMMAND;
        case 0: return COMMAND_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public CommandCase
  getCommandCase() {
    return CommandCase.forNumber(
        commandCase_);
  }

  public static final int HMAC_FIELD_NUMBER = 2;
  private com.google.protobuf.ByteString hmac_ = com.google.protobuf.ByteString.EMPTY;
  /**
   * <code>optional bytes hmac = 2;</code>
   * @return Whether the hmac field is set.
   */
  @Override
  public boolean hasHmac() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>optional bytes hmac = 2;</code>
   * @return The hmac.
   */
  @Override
  public com.google.protobuf.ByteString getHmac() {
    return hmac_;
  }

  public static final int CHATCOMMAND_FIELD_NUMBER = 3;
  /**
   * <code>.daikombat.dto.PushChatEventCommand chatCommand = 3;</code>
   * @return Whether the chatCommand field is set.
   */
  @Override
  public boolean hasChatCommand() {
    return commandCase_ == 3;
  }
  /**
   * <code>.daikombat.dto.PushChatEventCommand chatCommand = 3;</code>
   * @return The chatCommand.
   */
  @Override
  public PushChatEventCommand getChatCommand() {
    if (commandCase_ == 3) {
       return (PushChatEventCommand) command_;
    }
    return PushChatEventCommand.getDefaultInstance();
  }
  /**
   * <code>.daikombat.dto.PushChatEventCommand chatCommand = 3;</code>
   */
  @Override
  public PushChatEventCommandOrBuilder getChatCommandOrBuilder() {
    if (commandCase_ == 3) {
       return (PushChatEventCommand) command_;
    }
    return PushChatEventCommand.getDefaultInstance();
  }

  public static final int GAMECOMMAND_FIELD_NUMBER = 4;
  /**
   * <code>.daikombat.dto.PushGameEventCommand gameCommand = 4;</code>
   * @return Whether the gameCommand field is set.
   */
  @Override
  public boolean hasGameCommand() {
    return commandCase_ == 4;
  }
  /**
   * <code>.daikombat.dto.PushGameEventCommand gameCommand = 4;</code>
   * @return The gameCommand.
   */
  @Override
  public PushGameEventCommand getGameCommand() {
    if (commandCase_ == 4) {
       return (PushGameEventCommand) command_;
    }
    return PushGameEventCommand.getDefaultInstance();
  }
  /**
   * <code>.daikombat.dto.PushGameEventCommand gameCommand = 4;</code>
   */
  @Override
  public PushGameEventCommandOrBuilder getGameCommandOrBuilder() {
    if (commandCase_ == 4) {
       return (PushGameEventCommand) command_;
    }
    return PushGameEventCommand.getDefaultInstance();
  }

  public static final int JOINGAMECOMMAND_FIELD_NUMBER = 5;
  /**
   * <code>.daikombat.dto.JoinGameCommand joinGameCommand = 5;</code>
   * @return Whether the joinGameCommand field is set.
   */
  @Override
  public boolean hasJoinGameCommand() {
    return commandCase_ == 5;
  }
  /**
   * <code>.daikombat.dto.JoinGameCommand joinGameCommand = 5;</code>
   * @return The joinGameCommand.
   */
  @Override
  public JoinGameCommand getJoinGameCommand() {
    if (commandCase_ == 5) {
       return (JoinGameCommand) command_;
    }
    return JoinGameCommand.getDefaultInstance();
  }
  /**
   * <code>.daikombat.dto.JoinGameCommand joinGameCommand = 5;</code>
   */
  @Override
  public JoinGameCommandOrBuilder getJoinGameCommandOrBuilder() {
    if (commandCase_ == 5) {
       return (JoinGameCommand) command_;
    }
    return JoinGameCommand.getDefaultInstance();
  }

  public static final int GETSERVERINFOCOMMAND_FIELD_NUMBER = 6;
  /**
   * <code>.daikombat.dto.GetServerInfoCommand getServerInfoCommand = 6;</code>
   * @return Whether the getServerInfoCommand field is set.
   */
  @Override
  public boolean hasGetServerInfoCommand() {
    return commandCase_ == 6;
  }
  /**
   * <code>.daikombat.dto.GetServerInfoCommand getServerInfoCommand = 6;</code>
   * @return The getServerInfoCommand.
   */
  @Override
  public GetServerInfoCommand getGetServerInfoCommand() {
    if (commandCase_ == 6) {
       return (GetServerInfoCommand) command_;
    }
    return GetServerInfoCommand.getDefaultInstance();
  }
  /**
   * <code>.daikombat.dto.GetServerInfoCommand getServerInfoCommand = 6;</code>
   */
  @Override
  public GetServerInfoCommandOrBuilder getGetServerInfoCommandOrBuilder() {
    if (commandCase_ == 6) {
       return (GetServerInfoCommand) command_;
    }
    return GetServerInfoCommand.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeBytes(2, hmac_);
    }
    if (commandCase_ == 3) {
      output.writeMessage(3, (PushChatEventCommand) command_);
    }
    if (commandCase_ == 4) {
      output.writeMessage(4, (PushGameEventCommand) command_);
    }
    if (commandCase_ == 5) {
      output.writeMessage(5, (JoinGameCommand) command_);
    }
    if (commandCase_ == 6) {
      output.writeMessage(6, (GetServerInfoCommand) command_);
    }
    getUnknownFields().writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(2, hmac_);
    }
    if (commandCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (PushChatEventCommand) command_);
    }
    if (commandCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (PushGameEventCommand) command_);
    }
    if (commandCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (JoinGameCommand) command_);
    }
    if (commandCase_ == 6) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, (GetServerInfoCommand) command_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof ServerCommand)) {
      return super.equals(obj);
    }
    ServerCommand other = (ServerCommand) obj;

    if (hasHmac() != other.hasHmac()) return false;
    if (hasHmac()) {
      if (!getHmac()
          .equals(other.getHmac())) return false;
    }
    if (!getCommandCase().equals(other.getCommandCase())) return false;
    switch (commandCase_) {
      case 3:
        if (!getChatCommand()
            .equals(other.getChatCommand())) return false;
        break;
      case 4:
        if (!getGameCommand()
            .equals(other.getGameCommand())) return false;
        break;
      case 5:
        if (!getJoinGameCommand()
            .equals(other.getJoinGameCommand())) return false;
        break;
      case 6:
        if (!getGetServerInfoCommand()
            .equals(other.getGetServerInfoCommand())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasHmac()) {
      hash = (37 * hash) + HMAC_FIELD_NUMBER;
      hash = (53 * hash) + getHmac().hashCode();
    }
    switch (commandCase_) {
      case 3:
        hash = (37 * hash) + CHATCOMMAND_FIELD_NUMBER;
        hash = (53 * hash) + getChatCommand().hashCode();
        break;
      case 4:
        hash = (37 * hash) + GAMECOMMAND_FIELD_NUMBER;
        hash = (53 * hash) + getGameCommand().hashCode();
        break;
      case 5:
        hash = (37 * hash) + JOINGAMECOMMAND_FIELD_NUMBER;
        hash = (53 * hash) + getJoinGameCommand().hashCode();
        break;
      case 6:
        hash = (37 * hash) + GETSERVERINFOCOMMAND_FIELD_NUMBER;
        hash = (53 * hash) + getGetServerInfoCommand().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static ServerCommand parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ServerCommand parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ServerCommand parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ServerCommand parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ServerCommand parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ServerCommand parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ServerCommand parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static ServerCommand parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static ServerCommand parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static ServerCommand parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static ServerCommand parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static ServerCommand parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(ServerCommand prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code daikombat.dto.ServerCommand}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:daikombat.dto.ServerCommand)
      ServerCommandOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ServerCommandOuterClass.internal_static_daikombat_dto_ServerCommand_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ServerCommandOuterClass.internal_static_daikombat_dto_ServerCommand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ServerCommand.class, Builder.class);
    }

    // Construct using com.beverly.hills.money.gang.proto.ServerCommand.newBuilder()
    private Builder() {

    }

    private Builder(
        BuilderParent parent) {
      super(parent);

    }
    @Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      hmac_ = com.google.protobuf.ByteString.EMPTY;
      if (chatCommandBuilder_ != null) {
        chatCommandBuilder_.clear();
      }
      if (gameCommandBuilder_ != null) {
        gameCommandBuilder_.clear();
      }
      if (joinGameCommandBuilder_ != null) {
        joinGameCommandBuilder_.clear();
      }
      if (getServerInfoCommandBuilder_ != null) {
        getServerInfoCommandBuilder_.clear();
      }
      commandCase_ = 0;
      command_ = null;
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return ServerCommandOuterClass.internal_static_daikombat_dto_ServerCommand_descriptor;
    }

    @Override
    public ServerCommand getDefaultInstanceForType() {
      return ServerCommand.getDefaultInstance();
    }

    @Override
    public ServerCommand build() {
      ServerCommand result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public ServerCommand buildPartial() {
      ServerCommand result = new ServerCommand(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(ServerCommand result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.hmac_ = hmac_;
        to_bitField0_ |= 0x00000001;
      }
      result.bitField0_ |= to_bitField0_;
    }

    private void buildPartialOneofs(ServerCommand result) {
      result.commandCase_ = commandCase_;
      result.command_ = this.command_;
      if (commandCase_ == 3 &&
          chatCommandBuilder_ != null) {
        result.command_ = chatCommandBuilder_.build();
      }
      if (commandCase_ == 4 &&
          gameCommandBuilder_ != null) {
        result.command_ = gameCommandBuilder_.build();
      }
      if (commandCase_ == 5 &&
          joinGameCommandBuilder_ != null) {
        result.command_ = joinGameCommandBuilder_.build();
      }
      if (commandCase_ == 6 &&
          getServerInfoCommandBuilder_ != null) {
        result.command_ = getServerInfoCommandBuilder_.build();
      }
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof ServerCommand) {
        return mergeFrom((ServerCommand)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(ServerCommand other) {
      if (other == ServerCommand.getDefaultInstance()) return this;
      if (other.hasHmac()) {
        setHmac(other.getHmac());
      }
      switch (other.getCommandCase()) {
        case CHATCOMMAND: {
          mergeChatCommand(other.getChatCommand());
          break;
        }
        case GAMECOMMAND: {
          mergeGameCommand(other.getGameCommand());
          break;
        }
        case JOINGAMECOMMAND: {
          mergeJoinGameCommand(other.getJoinGameCommand());
          break;
        }
        case GETSERVERINFOCOMMAND: {
          mergeGetServerInfoCommand(other.getGetServerInfoCommand());
          break;
        }
        case COMMAND_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 18: {
              hmac_ = input.readBytes();
              bitField0_ |= 0x00000001;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getChatCommandFieldBuilder().getBuilder(),
                  extensionRegistry);
              commandCase_ = 3;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getGameCommandFieldBuilder().getBuilder(),
                  extensionRegistry);
              commandCase_ = 4;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getJoinGameCommandFieldBuilder().getBuilder(),
                  extensionRegistry);
              commandCase_ = 5;
              break;
            } // case 42
            case 50: {
              input.readMessage(
                  getGetServerInfoCommandFieldBuilder().getBuilder(),
                  extensionRegistry);
              commandCase_ = 6;
              break;
            } // case 50
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int commandCase_ = 0;
    private Object command_;
    public CommandCase
        getCommandCase() {
      return CommandCase.forNumber(
          commandCase_);
    }

    public Builder clearCommand() {
      commandCase_ = 0;
      command_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.ByteString hmac_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>optional bytes hmac = 2;</code>
     * @return Whether the hmac field is set.
     */
    @Override
    public boolean hasHmac() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional bytes hmac = 2;</code>
     * @return The hmac.
     */
    @Override
    public com.google.protobuf.ByteString getHmac() {
      return hmac_;
    }
    /**
     * <code>optional bytes hmac = 2;</code>
     * @param value The hmac to set.
     * @return This builder for chaining.
     */
    public Builder setHmac(com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      hmac_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>optional bytes hmac = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearHmac() {
      bitField0_ = (bitField0_ & ~0x00000001);
      hmac_ = getDefaultInstance().getHmac();
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        PushChatEventCommand, PushChatEventCommand.Builder, PushChatEventCommandOrBuilder> chatCommandBuilder_;
    /**
     * <code>.daikombat.dto.PushChatEventCommand chatCommand = 3;</code>
     * @return Whether the chatCommand field is set.
     */
    @Override
    public boolean hasChatCommand() {
      return commandCase_ == 3;
    }
    /**
     * <code>.daikombat.dto.PushChatEventCommand chatCommand = 3;</code>
     * @return The chatCommand.
     */
    @Override
    public PushChatEventCommand getChatCommand() {
      if (chatCommandBuilder_ == null) {
        if (commandCase_ == 3) {
          return (PushChatEventCommand) command_;
        }
        return PushChatEventCommand.getDefaultInstance();
      } else {
        if (commandCase_ == 3) {
          return chatCommandBuilder_.getMessage();
        }
        return PushChatEventCommand.getDefaultInstance();
      }
    }
    /**
     * <code>.daikombat.dto.PushChatEventCommand chatCommand = 3;</code>
     */
    public Builder setChatCommand(PushChatEventCommand value) {
      if (chatCommandBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        command_ = value;
        onChanged();
      } else {
        chatCommandBuilder_.setMessage(value);
      }
      commandCase_ = 3;
      return this;
    }
    /**
     * <code>.daikombat.dto.PushChatEventCommand chatCommand = 3;</code>
     */
    public Builder setChatCommand(
        PushChatEventCommand.Builder builderForValue) {
      if (chatCommandBuilder_ == null) {
        command_ = builderForValue.build();
        onChanged();
      } else {
        chatCommandBuilder_.setMessage(builderForValue.build());
      }
      commandCase_ = 3;
      return this;
    }
    /**
     * <code>.daikombat.dto.PushChatEventCommand chatCommand = 3;</code>
     */
    public Builder mergeChatCommand(PushChatEventCommand value) {
      if (chatCommandBuilder_ == null) {
        if (commandCase_ == 3 &&
            command_ != PushChatEventCommand.getDefaultInstance()) {
          command_ = PushChatEventCommand.newBuilder((PushChatEventCommand) command_)
              .mergeFrom(value).buildPartial();
        } else {
          command_ = value;
        }
        onChanged();
      } else {
        if (commandCase_ == 3) {
          chatCommandBuilder_.mergeFrom(value);
        } else {
          chatCommandBuilder_.setMessage(value);
        }
      }
      commandCase_ = 3;
      return this;
    }
    /**
     * <code>.daikombat.dto.PushChatEventCommand chatCommand = 3;</code>
     */
    public Builder clearChatCommand() {
      if (chatCommandBuilder_ == null) {
        if (commandCase_ == 3) {
          commandCase_ = 0;
          command_ = null;
          onChanged();
        }
      } else {
        if (commandCase_ == 3) {
          commandCase_ = 0;
          command_ = null;
        }
        chatCommandBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.daikombat.dto.PushChatEventCommand chatCommand = 3;</code>
     */
    public PushChatEventCommand.Builder getChatCommandBuilder() {
      return getChatCommandFieldBuilder().getBuilder();
    }
    /**
     * <code>.daikombat.dto.PushChatEventCommand chatCommand = 3;</code>
     */
    @Override
    public PushChatEventCommandOrBuilder getChatCommandOrBuilder() {
      if ((commandCase_ == 3) && (chatCommandBuilder_ != null)) {
        return chatCommandBuilder_.getMessageOrBuilder();
      } else {
        if (commandCase_ == 3) {
          return (PushChatEventCommand) command_;
        }
        return PushChatEventCommand.getDefaultInstance();
      }
    }
    /**
     * <code>.daikombat.dto.PushChatEventCommand chatCommand = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        PushChatEventCommand, PushChatEventCommand.Builder, PushChatEventCommandOrBuilder>
        getChatCommandFieldBuilder() {
      if (chatCommandBuilder_ == null) {
        if (!(commandCase_ == 3)) {
          command_ = PushChatEventCommand.getDefaultInstance();
        }
        chatCommandBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            PushChatEventCommand, PushChatEventCommand.Builder, PushChatEventCommandOrBuilder>(
                (PushChatEventCommand) command_,
                getParentForChildren(),
                isClean());
        command_ = null;
      }
      commandCase_ = 3;
      onChanged();
      return chatCommandBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        PushGameEventCommand, PushGameEventCommand.Builder, PushGameEventCommandOrBuilder> gameCommandBuilder_;
    /**
     * <code>.daikombat.dto.PushGameEventCommand gameCommand = 4;</code>
     * @return Whether the gameCommand field is set.
     */
    @Override
    public boolean hasGameCommand() {
      return commandCase_ == 4;
    }
    /**
     * <code>.daikombat.dto.PushGameEventCommand gameCommand = 4;</code>
     * @return The gameCommand.
     */
    @Override
    public PushGameEventCommand getGameCommand() {
      if (gameCommandBuilder_ == null) {
        if (commandCase_ == 4) {
          return (PushGameEventCommand) command_;
        }
        return PushGameEventCommand.getDefaultInstance();
      } else {
        if (commandCase_ == 4) {
          return gameCommandBuilder_.getMessage();
        }
        return PushGameEventCommand.getDefaultInstance();
      }
    }
    /**
     * <code>.daikombat.dto.PushGameEventCommand gameCommand = 4;</code>
     */
    public Builder setGameCommand(PushGameEventCommand value) {
      if (gameCommandBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        command_ = value;
        onChanged();
      } else {
        gameCommandBuilder_.setMessage(value);
      }
      commandCase_ = 4;
      return this;
    }
    /**
     * <code>.daikombat.dto.PushGameEventCommand gameCommand = 4;</code>
     */
    public Builder setGameCommand(
        PushGameEventCommand.Builder builderForValue) {
      if (gameCommandBuilder_ == null) {
        command_ = builderForValue.build();
        onChanged();
      } else {
        gameCommandBuilder_.setMessage(builderForValue.build());
      }
      commandCase_ = 4;
      return this;
    }
    /**
     * <code>.daikombat.dto.PushGameEventCommand gameCommand = 4;</code>
     */
    public Builder mergeGameCommand(PushGameEventCommand value) {
      if (gameCommandBuilder_ == null) {
        if (commandCase_ == 4 &&
            command_ != PushGameEventCommand.getDefaultInstance()) {
          command_ = PushGameEventCommand.newBuilder((PushGameEventCommand) command_)
              .mergeFrom(value).buildPartial();
        } else {
          command_ = value;
        }
        onChanged();
      } else {
        if (commandCase_ == 4) {
          gameCommandBuilder_.mergeFrom(value);
        } else {
          gameCommandBuilder_.setMessage(value);
        }
      }
      commandCase_ = 4;
      return this;
    }
    /**
     * <code>.daikombat.dto.PushGameEventCommand gameCommand = 4;</code>
     */
    public Builder clearGameCommand() {
      if (gameCommandBuilder_ == null) {
        if (commandCase_ == 4) {
          commandCase_ = 0;
          command_ = null;
          onChanged();
        }
      } else {
        if (commandCase_ == 4) {
          commandCase_ = 0;
          command_ = null;
        }
        gameCommandBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.daikombat.dto.PushGameEventCommand gameCommand = 4;</code>
     */
    public PushGameEventCommand.Builder getGameCommandBuilder() {
      return getGameCommandFieldBuilder().getBuilder();
    }
    /**
     * <code>.daikombat.dto.PushGameEventCommand gameCommand = 4;</code>
     */
    @Override
    public PushGameEventCommandOrBuilder getGameCommandOrBuilder() {
      if ((commandCase_ == 4) && (gameCommandBuilder_ != null)) {
        return gameCommandBuilder_.getMessageOrBuilder();
      } else {
        if (commandCase_ == 4) {
          return (PushGameEventCommand) command_;
        }
        return PushGameEventCommand.getDefaultInstance();
      }
    }
    /**
     * <code>.daikombat.dto.PushGameEventCommand gameCommand = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        PushGameEventCommand, PushGameEventCommand.Builder, PushGameEventCommandOrBuilder>
        getGameCommandFieldBuilder() {
      if (gameCommandBuilder_ == null) {
        if (!(commandCase_ == 4)) {
          command_ = PushGameEventCommand.getDefaultInstance();
        }
        gameCommandBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            PushGameEventCommand, PushGameEventCommand.Builder, PushGameEventCommandOrBuilder>(
                (PushGameEventCommand) command_,
                getParentForChildren(),
                isClean());
        command_ = null;
      }
      commandCase_ = 4;
      onChanged();
      return gameCommandBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        JoinGameCommand, JoinGameCommand.Builder, JoinGameCommandOrBuilder> joinGameCommandBuilder_;
    /**
     * <code>.daikombat.dto.JoinGameCommand joinGameCommand = 5;</code>
     * @return Whether the joinGameCommand field is set.
     */
    @Override
    public boolean hasJoinGameCommand() {
      return commandCase_ == 5;
    }
    /**
     * <code>.daikombat.dto.JoinGameCommand joinGameCommand = 5;</code>
     * @return The joinGameCommand.
     */
    @Override
    public JoinGameCommand getJoinGameCommand() {
      if (joinGameCommandBuilder_ == null) {
        if (commandCase_ == 5) {
          return (JoinGameCommand) command_;
        }
        return JoinGameCommand.getDefaultInstance();
      } else {
        if (commandCase_ == 5) {
          return joinGameCommandBuilder_.getMessage();
        }
        return JoinGameCommand.getDefaultInstance();
      }
    }
    /**
     * <code>.daikombat.dto.JoinGameCommand joinGameCommand = 5;</code>
     */
    public Builder setJoinGameCommand(JoinGameCommand value) {
      if (joinGameCommandBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        command_ = value;
        onChanged();
      } else {
        joinGameCommandBuilder_.setMessage(value);
      }
      commandCase_ = 5;
      return this;
    }
    /**
     * <code>.daikombat.dto.JoinGameCommand joinGameCommand = 5;</code>
     */
    public Builder setJoinGameCommand(
        JoinGameCommand.Builder builderForValue) {
      if (joinGameCommandBuilder_ == null) {
        command_ = builderForValue.build();
        onChanged();
      } else {
        joinGameCommandBuilder_.setMessage(builderForValue.build());
      }
      commandCase_ = 5;
      return this;
    }
    /**
     * <code>.daikombat.dto.JoinGameCommand joinGameCommand = 5;</code>
     */
    public Builder mergeJoinGameCommand(JoinGameCommand value) {
      if (joinGameCommandBuilder_ == null) {
        if (commandCase_ == 5 &&
            command_ != JoinGameCommand.getDefaultInstance()) {
          command_ = JoinGameCommand.newBuilder((JoinGameCommand) command_)
              .mergeFrom(value).buildPartial();
        } else {
          command_ = value;
        }
        onChanged();
      } else {
        if (commandCase_ == 5) {
          joinGameCommandBuilder_.mergeFrom(value);
        } else {
          joinGameCommandBuilder_.setMessage(value);
        }
      }
      commandCase_ = 5;
      return this;
    }
    /**
     * <code>.daikombat.dto.JoinGameCommand joinGameCommand = 5;</code>
     */
    public Builder clearJoinGameCommand() {
      if (joinGameCommandBuilder_ == null) {
        if (commandCase_ == 5) {
          commandCase_ = 0;
          command_ = null;
          onChanged();
        }
      } else {
        if (commandCase_ == 5) {
          commandCase_ = 0;
          command_ = null;
        }
        joinGameCommandBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.daikombat.dto.JoinGameCommand joinGameCommand = 5;</code>
     */
    public JoinGameCommand.Builder getJoinGameCommandBuilder() {
      return getJoinGameCommandFieldBuilder().getBuilder();
    }
    /**
     * <code>.daikombat.dto.JoinGameCommand joinGameCommand = 5;</code>
     */
    @Override
    public JoinGameCommandOrBuilder getJoinGameCommandOrBuilder() {
      if ((commandCase_ == 5) && (joinGameCommandBuilder_ != null)) {
        return joinGameCommandBuilder_.getMessageOrBuilder();
      } else {
        if (commandCase_ == 5) {
          return (JoinGameCommand) command_;
        }
        return JoinGameCommand.getDefaultInstance();
      }
    }
    /**
     * <code>.daikombat.dto.JoinGameCommand joinGameCommand = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        JoinGameCommand, JoinGameCommand.Builder, JoinGameCommandOrBuilder>
        getJoinGameCommandFieldBuilder() {
      if (joinGameCommandBuilder_ == null) {
        if (!(commandCase_ == 5)) {
          command_ = JoinGameCommand.getDefaultInstance();
        }
        joinGameCommandBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            JoinGameCommand, JoinGameCommand.Builder, JoinGameCommandOrBuilder>(
                (JoinGameCommand) command_,
                getParentForChildren(),
                isClean());
        command_ = null;
      }
      commandCase_ = 5;
      onChanged();
      return joinGameCommandBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        GetServerInfoCommand, GetServerInfoCommand.Builder, GetServerInfoCommandOrBuilder> getServerInfoCommandBuilder_;
    /**
     * <code>.daikombat.dto.GetServerInfoCommand getServerInfoCommand = 6;</code>
     * @return Whether the getServerInfoCommand field is set.
     */
    @Override
    public boolean hasGetServerInfoCommand() {
      return commandCase_ == 6;
    }
    /**
     * <code>.daikombat.dto.GetServerInfoCommand getServerInfoCommand = 6;</code>
     * @return The getServerInfoCommand.
     */
    @Override
    public GetServerInfoCommand getGetServerInfoCommand() {
      if (getServerInfoCommandBuilder_ == null) {
        if (commandCase_ == 6) {
          return (GetServerInfoCommand) command_;
        }
        return GetServerInfoCommand.getDefaultInstance();
      } else {
        if (commandCase_ == 6) {
          return getServerInfoCommandBuilder_.getMessage();
        }
        return GetServerInfoCommand.getDefaultInstance();
      }
    }
    /**
     * <code>.daikombat.dto.GetServerInfoCommand getServerInfoCommand = 6;</code>
     */
    public Builder setGetServerInfoCommand(GetServerInfoCommand value) {
      if (getServerInfoCommandBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        command_ = value;
        onChanged();
      } else {
        getServerInfoCommandBuilder_.setMessage(value);
      }
      commandCase_ = 6;
      return this;
    }
    /**
     * <code>.daikombat.dto.GetServerInfoCommand getServerInfoCommand = 6;</code>
     */
    public Builder setGetServerInfoCommand(
        GetServerInfoCommand.Builder builderForValue) {
      if (getServerInfoCommandBuilder_ == null) {
        command_ = builderForValue.build();
        onChanged();
      } else {
        getServerInfoCommandBuilder_.setMessage(builderForValue.build());
      }
      commandCase_ = 6;
      return this;
    }
    /**
     * <code>.daikombat.dto.GetServerInfoCommand getServerInfoCommand = 6;</code>
     */
    public Builder mergeGetServerInfoCommand(GetServerInfoCommand value) {
      if (getServerInfoCommandBuilder_ == null) {
        if (commandCase_ == 6 &&
            command_ != GetServerInfoCommand.getDefaultInstance()) {
          command_ = GetServerInfoCommand.newBuilder((GetServerInfoCommand) command_)
              .mergeFrom(value).buildPartial();
        } else {
          command_ = value;
        }
        onChanged();
      } else {
        if (commandCase_ == 6) {
          getServerInfoCommandBuilder_.mergeFrom(value);
        } else {
          getServerInfoCommandBuilder_.setMessage(value);
        }
      }
      commandCase_ = 6;
      return this;
    }
    /**
     * <code>.daikombat.dto.GetServerInfoCommand getServerInfoCommand = 6;</code>
     */
    public Builder clearGetServerInfoCommand() {
      if (getServerInfoCommandBuilder_ == null) {
        if (commandCase_ == 6) {
          commandCase_ = 0;
          command_ = null;
          onChanged();
        }
      } else {
        if (commandCase_ == 6) {
          commandCase_ = 0;
          command_ = null;
        }
        getServerInfoCommandBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.daikombat.dto.GetServerInfoCommand getServerInfoCommand = 6;</code>
     */
    public GetServerInfoCommand.Builder getGetServerInfoCommandBuilder() {
      return getGetServerInfoCommandFieldBuilder().getBuilder();
    }
    /**
     * <code>.daikombat.dto.GetServerInfoCommand getServerInfoCommand = 6;</code>
     */
    @Override
    public GetServerInfoCommandOrBuilder getGetServerInfoCommandOrBuilder() {
      if ((commandCase_ == 6) && (getServerInfoCommandBuilder_ != null)) {
        return getServerInfoCommandBuilder_.getMessageOrBuilder();
      } else {
        if (commandCase_ == 6) {
          return (GetServerInfoCommand) command_;
        }
        return GetServerInfoCommand.getDefaultInstance();
      }
    }
    /**
     * <code>.daikombat.dto.GetServerInfoCommand getServerInfoCommand = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        GetServerInfoCommand, GetServerInfoCommand.Builder, GetServerInfoCommandOrBuilder>
        getGetServerInfoCommandFieldBuilder() {
      if (getServerInfoCommandBuilder_ == null) {
        if (!(commandCase_ == 6)) {
          command_ = GetServerInfoCommand.getDefaultInstance();
        }
        getServerInfoCommandBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            GetServerInfoCommand, GetServerInfoCommand.Builder, GetServerInfoCommandOrBuilder>(
                (GetServerInfoCommand) command_,
                getParentForChildren(),
                isClean());
        command_ = null;
      }
      commandCase_ = 6;
      onChanged();
      return getServerInfoCommandBuilder_;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:daikombat.dto.ServerCommand)
  }

  // @@protoc_insertion_point(class_scope:daikombat.dto.ServerCommand)
  private static final ServerCommand DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ServerCommand();
  }

  public static ServerCommand getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ServerCommand>
      PARSER = new com.google.protobuf.AbstractParser<ServerCommand>() {
    @Override
    public ServerCommand parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ServerCommand> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<ServerCommand> getParserForType() {
    return PARSER;
  }

  @Override
  public ServerCommand getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

